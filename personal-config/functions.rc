#----Functions-------------
function openrc() {
  readonly filename=${1:?"Which rc file would you like to open?"}
  rc_file=${filename}'.rc'
  code-insiders ~/Bootstrap-Environment/personal-config/${rc_file}
}

function openrcv() {
  readonly filename=${1:?"Which rc file would you like to open?"}
  rc_file=${filename}'.rc'
  vim ~/Bootstrap-Environment/personal-config/${rc_file}
}

function countfiles() {
  readonly filetype=${1:?"Please provide a filetype"}
  find . -type f -name \*.$filetype | wc -l
}

function lsgrep() {
  ls | grep $1
}

function tar_progress() {
  local tar_file=${1:?"Please provide a tar file to write to"}
  local folder=${2:?"Please provide files to tar"}
  tar cf - $folder -P | pv -s $(du -sb $folder | awk '{print $1}') | pigz >"$tar_file"
}

function syncrom() {
  local rom_file=${1:?"Please provide ROM files"}
  # Detect if NSZ file and decompress
  if [[ $rom_file =~ '.*\.nsz' ]]; then
    echo "NSZ file detected, decompressing..."
    nsz -DVw $rom_file
    rom_file=${rom_file%.nsz}.nsp
    echo "NSP file created: $rom_file"
  fi
  # Separate ROMs from updates for ROM Manager
  if [[ $rom_file =~ '\[v0\]' ]]; then
    echo "Base ROM file detected, moving to roms folder..."
    echo
    rom_path="~/sdcard/Emulation/roms/switch"
  else
    echo "Update file detected, moving to updates folder..."
    echo
    rom_path="~/switch_updates"
  fi

  echo "Running -> rsync -chazvP $rom_file roms:$rom_path"
  echo
  sleep 2
  rsync -chazvP $rom_file roms:$rom_path
}
