#----Functions-------------------
function countfiles() {
  readonly filetype=${1:?"Please provide a filetype"}
  find . -type f -name \*.$filetype | wc -l
}

function openrc() {
  readonly filename=${1:?"Which rc file would you like to open?"}
  rc_file=${filename}'.rc'
  code-insiders ~/Bootstrap-Environment/work-config/${rc_file}
}

function squash() {
  readonly commits=${1:?"How many commits back would you like to squash?"}
  git rebase -i HEAD~$commits
}

function squashmerge() {
  readonly target_branch_name=${1:?"Which branch would like to merge?"}
  git merge --squash $target_branch_name
}

function donebeep() {
  for i in {1..$1}; do
    osascript -e beep
  done
}

function pyenv-brew-relink() {
  rm -f "$HOME/.pyenv/versions/*-brew"

  for i in /usr/local/Cellar/python*/*; do
    ln -s $i $HOME/.pyenv/versions/${i##/*/}-brew
  done
}

function installkube() {
  brew install kubectl
  (
    set -x
    cd "$(mktemp -d)" &&
      OS="$(uname | tr '[:upper:]' '[:lower:]')" &&
      ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&
      KREW="krew-${OS}_${ARCH}" &&
      curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&
      tar zxvf "${KREW}.tar.gz" &&
      ./"${KREW}" install krew
  )
  kubectl krew install ctx
  kubectl krew install ns
}

function gns() {
  if [ -z "$1" ]; then
    echo "gns <project>

    Projects:
      - stage-cc
      - prod-cc
      - stage
      - infra
      - prod"

    return
  fi

  case $1 in
  test-cc | test-cloudcomposer | testcc)
    GCP_PROJECT=recharge-stage-services-8e59
    CLUSTER=us-east4-de-cloud-composer--dcf569c8-gke
    REGION=us-east4-c
    KUBECTX=gke_recharge-stage-services-8e59_us-east4-c_us-east4-de-cloud-composer--dcf569c8-gke
    ;;
  stage-cc | staging-cloudcomposer | scc)
    GCP_PROJECT=recharge-stage-services-8e59
    CLUSTER=us-east4-composer-stage-3d1ed8e9-gke
    REGION=us-east4-c
    KUBECTX=gke_recharge-stage-services-8e59_us-east4-c_us-east4-composer-stage-3d1ed8e9-gke
    ;;
  prod-cloudcomposer | pcc)
    GCP_PROJECT=recharge-prod-services-f818
    CLUSTER=us-east4-composer-prod-ef031057-gke
    REGION=us-east4-c
    KUBECTX=gke_recharge-stage-services-8e59_us-east4-c_us-east4-composer-prod-ef031057-gke
    ;;
  stage | staging | s)
    GCP_PROJECT=recharge-stage-services-8e59
    CLUSTER=staging
    REGION=us-east4
    KUBECTX=gke_recharge-stage-services-8e59_us-east4_staging
    ;;
  infra | i)
    GCP_PROJECT=recharge-infra-services-8b42
    CLUSTER=infra
    REGION=us-east4
    KUBECTX=gke_recharge-infra-services-8b42_us-east4_infra
    ;;
  prod | p)
    GCP_PROJECT=recharge-prod-services-f818
    CLUSTER=prod
    REGION=us-east4
    KUBECTX=gke_recharge-prod-services-f818_us-east4_prod
    ;;
  esac

  gcloud config set project $GCP_PROJECT

  if [ -n "$CLUSTER" ]; then
    gcloud container clusters get-credentials $CLUSTER --region $REGION
  fi
}
